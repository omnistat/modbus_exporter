modules:

    # Module name, needs to be passed as parameter by Prometheus.
  - name: "fake"
    protocol: 'tcp/ip'
    metrics: # Each metric sends a separate request as before
      - name: "some_gauge"
        help: "some help for some gauge"
        address: 30023
        dataType: int16
        metricType: gauge
        factor: 2

      - name: "coil"
        help: "some help for some coil"
        address: 124
        dataType: bool
        bitOffset: 0
        metricType: gauge

    blockRead:
      - startAddress: 3102 # Starting register address
        # We still include the function code. This will determine that the entire block 
        # of registers will be read as holding registers etc.
        count: 32 # Number of addresses starting at 3102 to read from. Will read 3102 - 3134
        # Make this user definable, but recommend or enforce buffer limits:
        # - 2000 for I/O registers
        # - 125 for Modbus RTU
        # - 123 for Modbus TCP
        metrics:
          - name: "current"
            help: "help message"
            address: 3103 # Should the function code should be ommitted here?
            dataType: int16 # This would be a single register
            labels:
              phase: "1"
              building: "power_room"
            endianness: big
            metricType: gauge
            factor: 1

          - name: "voltage"
            address: 3104
            dataType: int32 # This would be two registers as each register is 16 bits
            # So technically this will use addresses 3104 and 3105 to form an int32
            labels:
              phase: "1"
              building: "power_room"
            endianness: big
            metricType: gauge
            factor: 1

          - name: "power"
            address: 3106
            dataType: float32 # This would be two registers as each register is 16 bits
            # So technically this will use addresses 3104 and 3105 to form an int32
            labels:
              phase: "1"
              building: "power_room"
            endianness: big
            metricType: gauge
            factor: 1            

      - startAddress: 3240 # Starting register address
        count: 8 # Number of addresses starting at 3240 to read from. Will read 3240 - 3248
        metrics:
          - name: "coil"
            help: "some help for some coil"
            dataType: "bool"
            address: 124
            bitOffset: 0
            metricType: gauge

        # Pulls from the same saved data
          - name: "coil"
            help: "some help for some coil"
            dataType: "bool"            
            address: 124
            bitOffset: 1
            metricType: gauge